{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\colortbl ;\red255\green0\blue0;}
{\*\generator Msftedit 5.41.21.2509;}\viewkind4\uc1\pard\sa200\sl276\slmult1\lang9\b\f0\fs22 Brainstorming:\b0\par
Saving/death works pretty much the same as Nethack.\par
Massive dungeon (hundreds of levels), but you are not expected to traverse it all (shortcut to bottom).\par
The island should not only exist between characters, but should continue "running" even when not being played.  When a level is loaded, the enemies and items could be processed a certain number of turns depending on how long its been since the last time the level was loaded.  If it's been a short enough amount of time (the level was loaded only a few minutes ago), no processing will take place.  Enemies could move, and items could be moved around, too.  Note that this process should be independent of players, and should only look at the last level load time.\par
Maybe other levels should be processed simultaneously.\par
Whenever a player dies, they should leave behind a corpse, as well as all of their belongings.  They should also leave behind a ghost.  This ghost should have similar qualities to the player.  For instance, some ghosts might be hostile, while others are passive.  Their strength should be determined by something.  Ghosts should be fairly tough, but not invincible or anything rediculous.  UPDATE: So, bones file basically.\par
A dead player should also leave behind some sort of journal.\par
Item generation should not be biased on dungeon level.\par
Very stat-heavy.  This will allow the fun of collecting the perfect equipment, upgrading it with stuff, etc.\par
I should add crafting stuff like in MMOs.\par
While classes will begin with different stats and items, each class should start out the same each time.  So, a warrior would always begin with 16 strength and a sword, or whatever.\par
When you level up, you should not regain all of your health/mana.\par
I definitely want unique enemies.  In other words, special named boss type dudes.\par
Monsters should eventually be able to use anything that the player can use.\par
I want more loot in my game than in some other games, I think.  I know I want it to be entirely random (no weighting for dungeon levels or anything), \cf1\strike with the possible exception of unique monsters.  I should add some kind of Magic Find stat for the player.\cf0\strike0\par
When attacked, you should get wounds, which will cause bleeding and can lead to infection.  You can also catch diseases.  And of course, the player can be poisoned or cursed.\par
Light should also be a problem.  The player should be able to see in a very small radius without a light source.  With a light source, the radius  should be quite a bit larger.  There should be several sources of light.  Flashlights, lanterns, torches, etc.  Some can lie around the dungeon, and the player can carry them, too.  They should all require some kind of fuel to be used by the player.  Some levels should have electric lights, as well.  The darkness should be more dangerous than simply not allowing the player to see far, though.  Perhaps some enemies can only move in the darkness.  Others could only spawn in the darkness.  Maybe some kind of zergling type creature (small and weak, but lots can spawn) that only spawns in the dark near the player.  One cool effect would be to make flashlights only illuminate the area the player is facing.  Another light item could be glowsticks.  These could have their own internal "fuel" supply.  The player could activate them and then leave them around the level to light areas up.  For instance, the player is being chased by a pack of dark-moving monsters.  He runs down a hallway, leaving activated glowsticks on the floor behind him.  These hold the creatures at bay so he can escape.\par
I am thinking that the current level, plus the one above and the one below (if there is one) should be loaded into memory at any given time.  Also, levels will keep a timestamp of when they were last loaded.  While a level is loaded, at least some stuff will happen.  Everything will be happening on the player's current level, of course.  But the other two levels should have something going on, too.  Ultimately, I want to be able to have NPCs doing things while the player is not around.  This might actually require lots more levels being in memory.  Of course, if the entire game can be held in memory, that would be easiest.  Perhaps that is a better idea.\par
It might be a good idea to implement an autosaving feature, in case of a crash or something.  The game could autosave whenever the level changes.\par
Some monsters should be able to destroy and/or open doors.  There will be different types of doors, not just wooden ones.  There will also be a way to lock doors.  Of course, the player can already close doors.  Closing and locking a steel door (or some equivalent) should protect the player from all but perhaps the most horrific enemies.  I am picturing the player finding some relatively important room with a computer terminal that allows, among other things, control over the room's doors.  The player could lock the doors, and be safe from the enemies outside, enabling him to rest without worrying.\par
There should also be things that the player can hide in (or under).  For instance, a cabinet is in a room.  The player enters the room, being chased by a monster.  Before the monster is in range, the player steps into the tile with the cabinet, and uses a hide command.  The player is now hidden within the cabinet.  As long as the monster is hunting the player purely on sight, the monster can no longer see the player.  If I have a system set up in which the monster follows the "sight scent" of the player (I'm thinking the player will leave a "sight scent" and an actual "smell scent"), it will walk to the last place it saw the player, and then will no longer have any idea where he is.  Monsters that suddenly lose the player (due to the player hiding or teleporting) should wander around the immediate vicinity for a short while, and then leave.  Most likely, this would entail returning the way they came.  I might need to implement a system for the monsters to know where they have most recently been.\par
Some awesome boss encounters would be cool.  For instance, a random level could be chosen as an Encounter Level (and no encounter levels actually need to be guaranteed).  The encounter will then be chosen at random.  That level could have some parameters set to much smaller random bounds than normal.  For instance, a dinosaur boss monster encounter is chosen.  The level is generated much smaller, as well as quite cramped (only small rooms).  Aside from these things, everything else is still handled randomly.\par
I think some kind of one-way level transitions would be cool.  For instance, holes that you can fall down to a level below.\par
Some monsters should be capable of following the player through level transitions.  Some monsters should also be able to do this without the player being around.  My current thinking is that monsters will not spawn or respawn (except special cases such as dark-spawning creatures).  Thus, a cleared level will stay cleared.  However, there will be an exception.  Some monsters will be able to move between levels at will.  This means that a cleared, perfectly safe level could still later have a monster on it, but only because the monster actually came there from somewhere else.\par
Lights should actually have color.  Torches should give off red or orange glowy light, while flashlights should give off yellow or white light.  Lights can also have a brightness.  This could be implemented by simply using opacity.  So, lights can have brightness, color, and can be flickering (or off, of course).  To avoid massive memory usage (each tile having separate variables for all of these things), I might have to come up with a way for lights to keep an array of what tiles they are lighting instead.  I will wait and see for this, however.\par
Another thing that might be cool in regards to monsters: The game could generate all of the levels, and then begin working on monster generation.  Clusters of different monster types could be put together on each level.  These basic groups could befriend one another or fight each other.  Their populations would grow and shrink according to this cooperation and/or competition, in addition to other factors (maybe?).  Basic race relations could be kept track of on a game-wide basis.  Thus, the player could not only discover what different monsters are like, but which ones prefer fighting each other to fighting the player.  Some monsters could kill others for food, and actually take time to eat the corpses of their victims.  Run this system for several hundred or thousand turns before the game actually begins, and the whole dungeon will be quite alive (or not).  In fact, this could even lead to slightly easier games (some levels might be devoid or almost devoid of life).  I think this should be absolutely allowed.  There should be tons of traits and such for each monster type.  All of these could be factors in the race relations.  They could also be factors in which creatures win out in wars.\par
Monsters should even be able to fight amongst their own kind.  There won't be any global relation value for this.  Instead, some traits might be "cannibal" or just "fights a lot with own kind" or whatever.\par
For now, I am thinking that this would work best if monsters and the player each get one tile to themselves.  So no monsters stacking on top of one another in a single tile.\par
If and when I add magic to my game: If there are any spells that the player learns, such as through some kind of spellbook, he should not know what the spell actually does.  This will be a part of the ID game.\par
All items should do whatever it is that they do.  No identification is needed for items to fully function.  ID is needed so the player knows what items are good and which are bad.\par
Could I possibly get at least some equipment into the ID game, too?  For instance, armor made with unidentified kinds of metal?  Different kinds of metal could have different properties.  One obvious use for this: artifact or legendary equipment.  For example: Artifact weapons could be randomly generated each game.  These may or may not be placed somewhere.  Their name, properties, etc. will all be random.  A sword will be a sword, but aside from that, it could be anything.  In fact, if I come up with enough cool abilities for artifact weapons, their status as a regular weapon might be superceded by their artifact "power."  This would mean that finding an artifact sword or spear would mean needing to find out what special power it has.  For instance, a sword might have the power of invisibility.  These same concepts could be applied to magical non-artifacts as well.  And, for the system to really make the game awesome, I would need to find a way to do the same thing with regular equipment to at least some degree.\par
I want socketable equipment.  This opens up yet another oppurtunity for the ID game: gems or other socket items.\par
The player needs to be able to equip a specific light item as equipment.  Then, there will be a "toggle light item" button.\par
There should be different level types. A level's type is determined when it is first generated. The type is used in generating the level.\par
You don't regain HP just for existing.  Quite the opposite.\par
No need for any kind of "item memory" or whatever ala Nethack.  When something is in the fog of war, it is simply not displayed.\par
Any class should be able to use any piece of equipment.  If the class is not proficient in something, it will be penalized in some way.\par
Items should be able to be either cursed, blessed, or regular.  An item is not simply "cursed."  Instead, it has the Such And Such Curse on it.  An item can only have one curse or one blessing on it.  So, there could be a char for curse and a char for blessing.  0 in both would mean regular.  Any number other than 0 in one would mean that particular curse or blessing.\par
Light items will have fuel sources.  There will be food for eating, water (and other things) for drinking, and special clothes for warmth (coats, etc.).  There should also be something for sleeping, since it will be important.  Sleeping bags, pillows, etc.  Perhaps you can equip one or more "sleep items" just like a light item.  Or, when you sleep, you choose the item from your inventory.  I like the sleep item method better.  That way, unless you change what you are sleeping in, you just tell your guy to sleep with a single button, and that's that.  If you have no sleep item equipped, you sleep on the ground.\par
I should put some awesome Lovecraftian stuff in the game.  The obvious thing is monsters.  I can have some pretty wild creatures from that universe if I want to.  I should look over my Lovecraft books and see what else I can come up with.\par
Mouse control should be added :-D.  For now, I'm just thinking that left clicking anywhere will act as though the player hit the movement key in that direction.  There should be a delayed repeat for holding the mouse button, just like for holding the direction keys.\par
I want the player to be able to wear lots of different pieces of equipment at once.  Two or three rings per hand, at least one necklace, etc.\par
I want a lot of character customization, like I've already said.  I definitely want a very indepth character creation setup.  However, I will need to balance this against the length of this creation period.  After all, no one wants to spend 10 minutes creating the most uber character ever only to have them die horribly 30 seconds later.  I am planning on probably being medium evil in regards to death.  Basically, that means I want the game to usually last at least long enough for the indepth character creation to have been worth it.\par
I realize that a light on the other side of a wall from the player lighting up the room doesn't make realistic sense.  However, after some thought, I think I am going to go ahead with this anyway, because I think it will be more fun.\par
Some enemies should be able to carry lights, too.  Most won't, and this makes perfect sense.  Most creatures have been living either in the dark or in the lit areas of the dungeon for forever.  So they don't need to carry anything with them, they just hang out in their natural areas.  But some tougher, possibly cooler enemies should be able to carry lights around with them.  These should at least mostly work like the light items laying around the dungeon.  However, perhaps there would be one difference.  Enemy lights would \b only show up when the enemy is within a certain distance from the player.\b0\par
At some point, I might want to make the dungeon lighting system more sophisticated.  What I mean is: light items will give off light, but not fog==2 light.  This is because fog==2 becomes fog==1 when it goes out or moves away.  Instead, these could be fog==4.  When a fog==4 goes out, it becomes fog==0 again.  Of course, fog==2 can replace fog==4.  If a light covers a place that is fog==2 or fog==1, it should either a) leave fog==2 as it is, or b) change fog==1 to fog==2 like the player would.  Enemy lights could also use fog==4 in the exact same way.  The enemy light would simply be OFF unless the enemy is within a certain distance of the player.\par
Monsters should probably have some kind of faction variable.  This will determine whose side they are on.  There can be a game-wide set of variables that keep track of what factions are allies or enemies with what other factions.  The player will be his own faction.  When the player takes a pet (or summons things, controls them, etc.) they become his faction until they are free again.  ACTUALLY, I will already be keeping track of race.  Each race will be its own faction.  Monsters could also have a bool under_player_control that determines if they are on the player's side.  Otherwise, they are processed as their race when it comes to faction/race relations.  So, in short, no "factions," just use the races that will already be there.  One exception: the player.\par
As the player does things (killing enemies, but other stuff too) he gains experience.  I was going to say that experience should be used in leveling up skills that are used, and that the player should not even have a "level."  However, I think this might be less fun.  Leveling up is fun.  So I'll probably leave that in.  I like the sound of the way Crawl does it, I think.  Oblivion also has a great system.  I want skills to be in the game, and I want them to level up separately, and according to usage.\par
I'm starting to think that I'm going to need a really in-depth damage system.  Most attacks will probably either a) damage a random body part or b) damage the whole body.  However, such a system would allow for some attacks to target specific body parts.  Also, traps could do more realistic damage.  For instance, you might trip some kind of "two logs smashing the head" trap, and your head would get squished.\par
I also like the idea of blood stains left on the floor :-D\par
I really don't want a religion system, but I need something awesome to replace it.\par
I like the idea of making noise attracting monsters.\par
For the equipment system, there should be slots for melee weapons (I definitely want dual-wielding to be possible), ranged weapons, and perhaps also thrown weapons.  I am thinking currently that anything should be placeable in any of these slots.  Items will need to know how to be handled when placed in different slots.  Anything could be used to whack things, and anything could be thrown, theoretically.  However, only ranged weapons can shoot stuff.  So maybe prevent the player from equipping anything other than ranged weapons in the ranged slot.  There will need to be a way to quickly switch between melee, ranged, and thrown weapons.  I might also have multiple weapon sets, but we'll see about that later.\par
Any items that are stackable (anything that I can easily do), which will probably end up being consumables at least, should be able to be stacked to a very large number (possibly pretty much infinite, just some hard-coded max number based on integer size or something?)\par
I was considering having some kind of slot based inventory system, and I still love that idea, but there is one problem: it makes it more difficult to have a virtually infinite sized inventory.  However, if I allow for infinite stacking, make the slots small enough and capable of covering the whole screen, and allow for scrolling if need be, I could probably pull this off.  However, for now at least, I'm starting to think that a nice list would look really cool.  I like the PDA idea I had earlier.  The inventory could simply be a list of items (which will allow for easily showing far more items on screen at once).  They will simply be displayed as their name and amount, if stacked (and maybe some small amount of other essential information if I decide that later).  When the player mouses over an item, they could get the full information on it in a tooltip type window, like in WoW and other RPGs.  However, I want the player to be able to display whatever interface windows they want all at once.  For instance, they could have the inventory screen up, along with the equipment screen.  I want interface windows to be moveable (perhaps with a "Return to home position" button?).  I considered making them resizeable, but I think that would be too much work for little or no useful gain.  The only problem with this is that it makes it difficult to keep the PDA idea alive.  Obviously, useability will win out, but I still want it to look cool.  I need to make a decision about this.\par
Ultimately, I will probably have AI track the player via a "player presence" variable that is affected by the player's FOV.  This will be how the monsters technically track the player.  I'll need to figure out how to actually do this, but I know it is recommended online, and it sounds relatively easy and sensible.  Once I have this working, monsters will track the player via sight, smell, and sound (other things added later maybe; telepathy?).  The individual monster's characteristics will determine how it can track the player, and what senses it prefers over others, if it has more than one.  Sight will simply follow the player's trail when the monster has LOS to the player.  Smell will follow the trail, but only when the player presense value is above a certain arbitrary "scent" threshold.  Sound will work essentially as though the monster is telepathic.  He doesn't need LOS or a certain scent value, he just needs to be able to follow the player's trail and hear him.  So it comes down to how he can hear the player.  I will probably give the monsters a "hearing range."  Anything within this range of the monster that makes enough sound will be heard.  Certain actions by the player will make certain amounts of noise.\par
I think I am going to need to shrink the level sizes down significantly.  This would MAJORLY help with ram requirements, and I don't actually need nearly as much space as I currently have for the dungeon levels.  However, I want the island to be huge.  So that means that I will need to have the island level be a different size from all of the others.\par
It might be cool to keep track of the player's tactics and strategies.  For instance: keep track of every time a monster comes into the player's FOV.  This gives us a Total Monsters Encountered, roughly.  Then, keep track of how many monsters the player kills.  With this, we now know if the player prefers attacking or avoiding encounters with monsters.\par
As of right now, I am thinking that there should never be any way to dig out solid tiles.  I think the same might apply to walls.  This will certainly simplify some stuff, and will prevent some annoyances from Nethack that I would like to avoid (stupid rock enemies digging out the whole level).\par
I really like the message log in Crawl.  I will play the game some more and decide how I feel about its placement.  Having an always seeable list of several recent messages (instead of my current system: only the most recent is shown, and only until you do something) seems quite convenient.  I think the most recent message should be brighter, with past messages being grayed out somewhat.  Aside from that, other color-coding might also help, but very much would quickly get to be a problem.  Maybe just red or something for very important things, such as "you are going to die" or something, lol.  Scrolling via the mousewheel will be a must.  I already have this at least half implemented.  I will need to reserve some screen space for this if I decide to go with it.  I should bring back D_O Chat's multi-line messages, to handle long messages that might come up.  To make this more noticeable, it would really need to be over the screen, but I fear that would get in the way.  I will probably tinker with this idea.\par
So far I think I find Crawl's tooltips to be a little distracting.  I want something similar, but I want it to be instant and to stay shown until you are no longer moused over it.  Also, I want all useful information to be shown in the tooltip, instead of somewhere else.  As much as possible, messages, information, names, etc. should be shown right on or next to the thing in question.  For instance, the tooltips should pop up when you mouse over items in your inventory, and give you all needed info.  When you mouse over different stats stuff, a tooltip will probably pop up as well.  I love Crawl's mouseover info for the actual game stuff (tiles, items, etc.), and so I think I'll implement that eventually.  I am also toying with the idea of having some information show up above at least some things in the dungeon.  For instance, the player's name could be shown above his head.  This should be configurable.\par
Speaking of configuration options, I want a simple, GUI-fied series of options menus for my game that are accessible both before the game begins, and while playing the game.\par
The health meter, and other meters, in Crawl is a great idea.\par
This should probably go without saying, but no abbreviations.  It is NEVER str, it is strength.\par
Current light sources that I am thinking of: Flashlight, glowstick, flare, torch, lantern.  The flashlight is steady, but only gives a beam of light.  The torch and lantern both give radius light, but are not steady.  Right now I'm thinking that there will be a random variation in the light radius.  How often (in turns) this changes will be dependent on light steadiness.  So far, the light sources will simply have an inherent steadiness rating.  Later, maybe I can add other factors into this.  The fuel source will differ for the light sources.  Perhaps the fire-based ones can be put out?  I need to do some research into these different light sources, and I should see if I can come up with some more to add, too.\par
Crawl seems to let you click anywhere to auto-travel there, UNLESS there are enemies in sight.  Then, a mouse click anywhere just moves you one tile in that direction.  Good idea.\par
In Crawl, you can use the minimap to autotravel and to look around the dungeon.  Good ideas.\par
In Crawl, both you and the monsters have health bars on your tile, I like this.\par
In Crawl, corpses decay into skeletons, awesome!\par
Weapon experience.  Your character could gain experience with specific weapons.  What I mean is: the longer you fight with a specific weapon, the better you get with it.  Note that I said weapon, not weapon type.  Basically, you end up with your "trusty sword" as opposed to all of the random swords scattered about the dungeon.  Rewards picking a good piece of equipment and sticking with it.  Question: Should this only apply to the currently held weapon, and reset whenever the weapon is switched?  Or, should it apply to all weapons in the game?  Any weapon not currently being held could either stay the same or even deteriorate (very slowly).  The currently wielded weapon would definitely not deteriorate, and would gain experience each time it is used.  This weapon experience could translate into damage bonuses, etc.\par
Difficulty levels!  At least two.  I am thinking a standard difficulty level, which is very RL.  But the addition of an easy level would allow other people to get into the game that might not otherwise.  All sorts of things could be affected.  Starting HP, HP gains per level, etc.  Perhaps other stats as well, this will depend on my whole system.  I could also add a very easy level which is easy + no permadeath.  This would be perfect.  I want scores, of course, and these could simply be reduced (raised?) by a certain percetage based on difficulty level.  Normal Mode would have no score adjustment.  There could also be a hard mode, where you start out extra weak or something.\par
Varied lighting levels.  I am starting to think that I will have to add this.  It will make the game look so much prettier!\par
There should be a few different sizes for potions.  The smallest size will be one-use.  Each successive size will offer one additional usage.  So, if you get really lucky, you could find a large potion of healing or whatever on the first dungeon level, and you would be set for a while.  Also, if you find a potion that has multiple uses, you can identify it and still have uses for it.  Awesome!\par
There should be a built-in water storage (canteen, probably).  You could also find bottles of water and such scattered about the dungeon.\par
After using potions and water, should the container remain in your inventory or just go away?  The only reason I'm even considering keeping the containers is that you could fill them with water.  I might add this later if I decide to do it.  For now, I think I'll at least delay it.  It all depends on if it is needed for water storage.\par
Nightvision goggles.  These would allow you to see around you, but would not prevent enemies from moving, etc.\par
No "potions."  All liquid items are liquid items instead.  This will probably need a better name.  So there is water for drinking, oil for lamps, and all sorts of colored liquids that are magical potions.  Things such as water and oil will not need to be identified.\par
Salt water vs. fresh water?\par
I am picturing a circle in the top left of the screen that shows the player's body.  It is color-coded to show each body part's health.\par
One kind of identifiable item should have a ton of members (for instance, tons of different kinds of potions), while another could have only a few.  Since they should probably all have more good than bad item members, randomly trying items from a type that has numerous members will be safer.\par
Items will usually start out unidentified.  A Sword of Pwnage +3 will be seen first as an iron short sword.  When identified, the item will be shown as what it really is.  However, it would be fun to make it possible for items to be misidentified or known incorrectly.  For instance, the player is extremely thirsty and begins to hallucinate.  Perhaps a bottle of poison they find looks like water to them.  This would mean this: Poison is a purple liquid.  Water starts out identified, so it's just water, not a blue liquid.  The player is thirsty, and hallucinating.  He picks up a bottle of poison.  Regardless of whether or not he has ident'd this item, he sees a bottle of water.\par
Similarly, if the player hallucinates something that they have never identified, they will see the unident'd version.  So reverse the above for an example: The player picks up water but hallucinates poison.  If he has ident'd poison, he hallucinates poison.  If he has not ident'd poison, he sees whatever poison is (a purple liquid or whatever).\par
I am thinking that light might replace hunger as the primary driving force of the game.\par
A story generator. It generates a story based on each game you play and saves it.\par
When you attempt to disarm a trap and fail, the trap should be immediately set off.\par
Instead of hunger, I might just implement thirst. It makes more sense, as the player will be thirsty a lot. In fact, all of the monsters should probably get thirsty a lot, too. I need to decide whether to have food, drink, or light source be the driving force (or some combination of the 3). Right now, I am thinking of having no food, and combining water and lighting as two game movers.\par
Food, if I include it, should rot, go bad, etc. Corpses should break down into bones over time.\par
There can be some kind of dye item, that comes in different colors. Dye can be applied to items (and later probably tiles, etc. too).\par
I might need to add a tool slot. Either that, or tools can be used when wielded.\par
\strike I could remove the light source equipment slot and just have items be turned on or off for lighting. This would allow multiple light sources on at once for the creature, so that would have to be handled.\strike0\par
Statuses for the creatures, such as blindness, hallucination, etc.\par
Search should look for traps too.\par
I just want to note somewhere: a game turn is one call to turn(). During this turn, creatures can make multiple moves.\par
The difficulty of monsters generated should be dungeon level-dependent, NOT player's experience level-dependent.\par
Necromancy sorts of spells that raise corpses and such as undead minions should take the kind of corpse into account. For instance, a grid bug corpse would become a grid bug zombie. Also, since corpses rot and leave behind skeletons, those should be raised as skeletons and not zombies.\par
}
 